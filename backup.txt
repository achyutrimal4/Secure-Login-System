<!-- division for captcha image and captcha input -->
            <!-- <div class="input-fields"> -->
                <!-- captcha and refresh button -->
                <!-- <div class="captcha-refresh">
                    <p><img src="captcha.php?rand=<?php echo rand(); ?>" id='captcha_image'></p>
                    <a href='javascript: refreshCaptcha();'><i class="fa fa-refresh" aria-hidden="true"></i></a>
                </div> -->
                <!-- captcha input -->
                <!-- <input type="text" name="captcha" placeholder="Enter Captcha" />
                <p style="font-size: 12px; color: #ff4757; text-align: left; width:100%; margin-top:3px; padding-left: 12.5px;">
                    <?php echo isset($error_type['captcha_error']) ? $error_type['captcha_error'] : '' ?></p>
            </div> -->

            if ($captcha == '') {
        $error_type['captcha_error'] = 'This field is required';
    } else if (strcasecmp($_SESSION['captcha'], $_POST['captcha']) != 0) {
        $error_type['captcha_error'] = " Entered captcha code does not match!";
    }

    'captcha_error' => ''

    
    
$captcha = trim($_POST['captcha']);

CAPTCHA.php

<?php
session_start();

//code taken from website allphptricks.com

//customize captcha
$captcha_code = '';
$captcha_image_height = 50;
$captcha_image_width = 130;
$total_characters_on_image = 6;

//characters that can be seen in a captcha
$possible_captcha_letters = 'abcdfghjkmnopqrstvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
$captcha_font = './monofont.ttf';

$random_captcha_dots = 100;
$random_captcha_lines = 45;
$captcha_text_color = "0xA0522D";
$captcha_noise_color = "0xD2691E";


$count = 0;
while ($count < $total_characters_on_image) { 
$captcha_code .= substr(
	$possible_captcha_letters,
	mt_rand(0, strlen($possible_captcha_letters)-1),
	1);
$count++;
}

$captcha_font_size = $captcha_image_height * 0.65;
$captcha_image = @imagecreate(
	$captcha_image_width,
	$captcha_image_height
	);

/* setting the background, text and noise colours here */
$background_color = imagecolorallocate(
	$captcha_image,
	255,
	255,
	255
	);

$array_text_color = hextorgb($captcha_text_color);
$captcha_text_color = imagecolorallocate(
	$captcha_image,
	$array_text_color['red'],
	$array_text_color['green'],
	$array_text_color['blue']
	);

$array_noise_color = hextorgb($captcha_noise_color);
$image_noise_color = imagecolorallocate(
	$captcha_image,
	$array_noise_color['red'],
	$array_noise_color['green'],
	$array_noise_color['blue']
	);

/* Generate random dots in background of the captcha image */
for( $count=0; $count<$random_captcha_dots; $count++ ) {
imagefilledellipse(
	$captcha_image,
	mt_rand(0,$captcha_image_width),
	mt_rand(0,$captcha_image_height),
	2,
	3,
	$image_noise_color
	);
}

/* Generate random lines in background of the captcha image */
for( $count=0; $count<$random_captcha_lines; $count++ ) {
imageline(
	$captcha_image,
	mt_rand(0,$captcha_image_width),
	mt_rand(0,$captcha_image_height),
	mt_rand(0,$captcha_image_width),
	mt_rand(0,$captcha_image_height),
	$image_noise_color
	);
}

/* Create a text box and add 6 captcha letters code in it */
$text_box = imagettfbbox(
	$captcha_font_size,
	0,
	$captcha_font,
	$captcha_code
	); 
$x = ($captcha_image_width - $text_box[4])/2;
$y = ($captcha_image_height - $text_box[5])/2;
imagettftext(
	$captcha_image,
	$captcha_font_size,
	0,
	$x,
	$y,
	$captcha_text_color,
	$captcha_font,
	$captcha_code
	);

/* Show captcha image in the html page */
// defining the image type to be shown in browser widow
header('Content-Type: image/jpeg'); 
imagejpeg($captcha_image); //showing the image
imagedestroy($captcha_image); //destroying the image instance
$_SESSION['captcha'] = $captcha_code;

function hextorgb ($hexstring){
  $integar = hexdec($hexstring);
  return array("red" => 0xFF & ($integar >> 0x10),
               "green" => 0xFF & ($integar >> 0x8),
               "blue" => 0xFF & $integar);
			   }
?>

// form input validation through javascript
// form.addEventListener("submit", (e) => {
//   e.preventDefault();

//   validateInputs();
// });
// function validateInputs() {
//   //get value from inputs
//   const usernameValue = username.value.trim();
//   const emailValue = email.value.trim();
//   const passwordValue = password.value.trim();
//   const rePasswordValue = repassword.value.trim();

//   //validate username
//   if (usernameValue === "") {
//     //add error class and show error
//     setErrorFor(username, "Please fill up this field.");
//     return;
//   } else {
//     setSuccessFor(username);
//   }
//   //validate email
//   if (emailValue === "") {
//     setErrorFor(email, "Please fill up this field.");
//     return;
//   } else if (!validateEmail(emailValue)) {
//     setErrorFor(email, "Please enter a valid email id.");
//     return;
//   } else {
//     setSuccessFor(email);
//   }
//   //validate password
//   if (passwordValue === "") {
//     setErrorFor(password, "Please fill up this field.");
//     return;
//   } else {
//     setSuccessFor(password);
//   }
//   //validate re-entered password
//   if (rePasswordValue === "") {
//     setErrorFor(repassword, "Please fill up this field.");
//     return;
//   } else if (rePasswordValue !== passwordValue) {
//     setErrorFor(repassword, "Passwords do not match.");
//     return;
//   } else {
//     setSuccessFor(repassword);
//   }
// }
// function setErrorFor(input, message) {
//   const inputFields = input.parentElement; //.input-fields div
//   const small = inputFields.querySelector("small");

//   //add error message in small
//   small.innerText = message;

//   //add error class
//   inputFields.className = "input-fields error";
// }
// function setSuccessFor(input) {
//   const inputFields = input.parentElement;
//   inputFields.className = "input-fields success";
// }